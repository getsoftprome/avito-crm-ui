schema {
    query: UserQueries
    mutation: UserMutations
}

type OrderStatus {
    id: String
    name: String
    color: String
}

type Platform {
    id: String
    name: String
    code: String
}

type User {
    id: String
    name: String
    email: String
    phone: String
    platformAccesses: [UserPlatformAccess]
}

type UserPlatformAccess {
    id: String
    user: User
    platform: Platform
}

type UserQueries {
    User: User!
    PlatformByCode(code: String!): Platform
    OrderStatusList(platformId: String!): [OrderStatus]
    OrderStatusById(id: String!): OrderStatus
}

type UserMutations {
    User(input: UserInput!): User!
    Platform(input: PlatformInput!): Platform!
    OrderStatus(input: OrderStatusInput!): OrderStatus!
    OrderStatusDelete(id: String!): Boolean
}

input OrderStatusInput {
    id: String
    name: String
    color: String
    platformId: String
}

input UserInput {
    id: String
    name: String
    email: String
    phone: String
    password: String
}

input PlatformInput {
    id: String
    name: String
}
